#!/bin/bash
#
# vov_checkout
#
# Tool for obtaining WordPress resources like plugins and themes from user-defined repositories. Currently only SVN
# is supported. Resources and possibly other settings are defined in config/checkout-config.json.
#
# This script relies heavily on jq and it is supposed to work in the Vagrant box.
#
# Please read vov_checkout wiki page for further details:
# https://git.onthegosystems.com/misc/vvv-for-otgs/wikis/other-modifications#vov_checkout


#
# constants
#

CONFIG_FILE="/vagrant/config/checkout-config.json"
CREDENTIALS_PATH="/vagrant/config/checkout-credentials/"



#
# functions
#


# Shortcut function to use jq on the config file.
# First argument is the jq query.
function jqc {
	cat "$CONFIG_FILE" | jq --raw-output "$1"
}


# Shortcut function to get resource property.
# First argument is resource index, second is the property name
function jqcr {
	jqc ".resources[$1].$2"
}


# Print path of the file with credentials for given server (first argument)
function get_credentials_file {
	echo "$CREDENTIALS_PATH$1"
}


# Read username from the credentials file (first argument)
function get_username {
	sed '1q;d' "$1"
}


function get_password {
	sed '2q;d' "$1"
}


function run_afterwards_command {
	I=$1
	RES_AFTERWARDS=`jqcr $I afterwards`
	if [ -n "$RES_AFTERWARDS" ]; then
		if [ "$RES_AFTERWARDS" != "null" ]; then
			echo "Running command afterwards: $RES_AFTERWARDS"
			eval $RES_AFTERWARDS
		fi
	fi
}


# SVN repository handler
# Arguments:
#	1. Resource index
#	2. Source
#	3. Destination
function handle_svn_repository {
	I=$1
	RES_SOURCE="$2"
	RES_DESTINATION="$3"
		
	RES_CREDENTIALS=`jqcr $I credentials`
	CREDENTIALS_FILE=`get_credentials_file "$RES_CREDENTIALS"`
	SVN_USER=`get_username "$CREDENTIALS_FILE"`
	SVN_PASSWORD=`get_password "$CREDENTIALS_FILE"`
	
	echo "Performing SVN checkout as user $SVN_USER from $RES_SOURCE to $RES_DESTINATION..."
	sudo -u vagrant -i -- svn checkout --username "$SVN_USER" --password "$SVN_PASSWORD" "$RES_SOURCE" "$RES_DESTINATION" 
	run_afterwards_command "$I"
}


# Install and activate a list of default plugins on each site.
function install_default_plugins() { 
	echo "Installing and activating default plugins..."
	
	# Skip comments and empty lines	
	grep -v '\(^\s*#\|^\s*$\)' < /srv/config/default-plugins | {
		# Iterate through all plugin names
		while read plugin_name; do
			echo "Installing $plugin_name..."
			sudo --u vagrant -- wp plugin install "$plugin_name" --activate &
		done 
	}
}


# GIT repository handler
# Arguments
#	1. Resource index
#	2. Source
#	3. Destination
function handle_git_repository {
	I=$1
	RES_SOURCE="$2"
	RES_DESTINATION="$3"

	RES_CREDENTIALS=`jqcr $I credentials`
	CREDENTIALS_FILE=`get_credentials_file "$RES_CREDENTIALS"`
	GIT_USER=`get_username "$CREDENTIALS_FILE"`
	GIT_PASSWORD=`get_password "$CREDENTIALS_FILE"`

	# todo support SSH in the future
	GIT_SRC="https://$GIT_USER:$GIT_PASSWORD@$RES_SOURCE"
	
	echo "Performing GIT clone as user $GIT_USER from $RES_SOURCE to $RES_DESTINATION..."
	sudo -u vagrant -i -- git clone "$GIT_SRC" "$RES_DESTINATION" 
	run_afterwards_command "$I"

	#echo 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $*' > gitssh
	#chmod +x ssh
	#GIT_TRACE=1 GIT_SSH='./gitssh' git clone "$GIT_USER@$RES_SOURCE" "$RES_DESTINATION"

}

# ZIP repository handler
# Arguments
#	1. Resource index
#	2. Source
#	3. Destination
function handle_zip_repository {
	local I=$1
	local RES_SOURCE="/vagrant/config/checkout-zipfiles/$2"
	local ASSET_TYPE=$(jqcr $I asset_type)
	
	echo "Installing $ASSET_TYPE from local zip file $RES_SOURCE"
	sudo -u vagrant -- wp $ASSET_TYPE install "$RES_SOURCE" 
	run_afterwards_command "$I"
}


#
# main
#

figlet -cf slant VOV
echo
echo "vov_checkout starting..."

RESOURCE_COUNT=`jqc '.resources | length'`

echo "Found $RESOURCE_COUNT resources."

# loop through the resources.
I=0
while [ $I -lt $RESOURCE_COUNT ]; do

	# read resource parameters
	RES_NAME=`jqcr $I name`
	RES_TYPE=`jqcr $I type`
	RES_SOURCE=`jqcr $I source`
	RES_ROOT=`pwd`
	RES_DESTINATION=`jqcr $I destination`
	RES_DESTINATION="$RES_ROOT/$RES_DESTINATION"

	echo "Processing $RES_TYPE repository for $RES_NAME..."

	if [ -d "$RES_DESTINATION" ]; then
		echo "Destination already exists. Skipping."
	else
		case $RES_TYPE in
			svn)
				handle_svn_repository $I "$RES_SOURCE" "$RES_DESTINATION" &
				;;
			git)
				handle_git_repository $I "$RES_SOURCE" "$RES_DESTINATION" &
				;;
			zip)
				handle_zip_repository $I "$RES_SOURCE" &
				;;
			*)
				echo "Repository type not supported."
				;;
		esac

	fi

	echo ""
	
	let I=I+1
done

# default plugins from wordpress.org
install_default_plugins

echo "Waiting for vov_checkout subcommands..."
wait

echo "vov_checkout finished."
